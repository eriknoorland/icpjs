var icpjs=function(){"use strict";const t=t=>"x"in t&&"y"in t;var e=(t,e)=>{const n=t.x-e.x,r=t.y-e.y;return Math.pow(n*n+r*r,.5)},n=(t,e)=>t.map((t=>({x:t.x+e.x,y:t.y+e.y}))),r=(t,e)=>{const{phi:n}=e,r=Math.sin(n),o=Math.cos(n);return t.map((t=>({x:o*t.x-r*t.y,y:r*t.x+o*t.y})))},o=(t,n)=>{const r=n.length;let o=1/0,i={x:1/0,y:1/0};for(let y=0;y<r;y+=1){const r=n[y],x=e(t,r);x<o&&(o=x,i=r)}return i},i=(t,e)=>({x:t.x-e.x,y:t.y-e.y}),y=({x:t,y:e})=>t*t+e*e,x=(t,{x1:e,y1:n,x2:r,y2:o})=>{const x=y(i(t,{x:r,y:o})),s=y(i({x:e,y:n},{x:r,y:o})),a=y(i(t,{x:e,y:n}));if(a+s<x)return{x:e,y:n};if(x+s<a)return{x:r,y:o};let h,c=n-o,l=r-e,f=e*o-r*n;if(0===l){if(0===c)return null;h=-c,c=-1,f/=h}else h=-l,c/=h,l=-1,f/=h;if(0!==l){let e;return e=0!==c?(t.x/c+t.y-f)/(c+1/c):t.x,{x:e,y:c*e+f}}return{x:f/-c,y:t.y}},s=(t,n)=>{const r=n.length;let o=1/0,i={x:1/0,y:1/0};for(let y=0;y<r;y+=1){const r=n[y],s=x(t,r);if(!s)continue;const a=e(t,s);a<o&&(o=a,i=s)}return i};return Object.freeze({run:(i,y,x={x:0,y:0,phi:0},a={})=>{if(!i.length)throw new Error("At least 1 reference point or line segment is required");const h=i[0],c=t(h),l="x1"in(f=h)&&"x2"in f&&"y1"in f&&"y2"in f;var f;if(!c&&!l)throw new Error("The reference should either be an array of points or line segments");if(!y.length)throw new Error("At least 1 data point is required");if(!t(y[0]))throw new Error("The data should be an array of points");const u=Object.assign({method:l?s:o,maxIterations:20,tolerance:.1},a),p=y.length,m={x:0,y:0,phi:0};let d=[...y],w=0;for(let t=0;t<u.maxIterations;t+=1){let t=0,o=0,y=0,s=0,a=0,h=0,c=0,l=0,f=0;for(let e=0;e<p;e+=1){const n=d[e],r=u.method(n,i);if(!r)continue;t+=1;const p={x:n.x-x.x,y:n.y-x.y},m={x:r.x-x.x,y:r.y-x.y};o+=p.x,y+=m.x,s+=p.y,a+=m.y,h+=p.x*m.x,c+=p.y*m.y,l+=p.x*m.y,f+=p.y*m.x}const g=h-o*y/t,b=c-s*a/t,M=l-o*a/t,j=f-s*y/t,E=o/t,v=s/t,I=y/t,O=a/t;if(e({x:E,y:v},{x:I,y:O})<u.tolerance)break;const T={x:0,y:0,phi:0};T.phi=Math.atan2(M-j,g+b);const q=Math.cos(T.phi),z=Math.sin(T.phi);T.x=I-(E*q-v*z),T.y=O-(E*z+v*q),d=n(d,T),d=r(d,T),m.x+=T.x,m.y+=T.y,m.phi+=T.phi,w+=1}return Object.freeze({transformation:m,dataPoints:d,numIterations:w})},utils:{applyTranslation:n,applyRotation:r}})}();
